// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/Adder16.hdl

/**
 * Adds two 16-bit values.
 * The most significant carry bit is ignored.
 * implemented using a look ahead carry adder
 */

CHIP Add16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:

//=========First 4bit adder:===========
//Carry Propagation: 
    //Xor(a=a[0],b=b[0],out=P0);
    //Xor(a=a[1],b=b[1],out=P1);
    //Xor(a=a[2],b=b[2],out=P2);
    //Xor(a=a[3],b=b[3],out=P3);
//Carry Generate:
    //And(a=a[0],b=b[0],out=G0);
    //And(a=a[1],b=b[1],out=G1);
    //And(a=a[2],b=b[2],out=G2);
    //And(a=a[3],b=b[3],out=G3);
//output carry:
    //And(a=P0,b=false,out=D0);
    //Or(a=G0,b=D0,out=C1);//c1
    //And(a=P1,b=C1,out=D1);
    //Or(a=G1,b=D1,out=C2);//c2
    //And(a=P2,b=C2,out=D2);
    //Or(a=G2,b=D2,out=C3);//C3
    //And(a=P3,b=C3,out=D3);
    //Or(a=G3,a=D3,out=C4);//carry out
//sumation:
    //Xor(a=P0,b=false,out=out[0]);
    //Xor(a=P1,b=C1,out=out[1]);
    //Xor(a=P2,b=C2,out=out[2]);
    //Xor(a=P3,b=C3,out=out[3]);
//==========End first 4 bit adder.==========

//=========Second 4bit adder:===========
//Carry Propagation: 
    //Xor(a=a[4],b=b[4],out=P4);
    //Xor(a=a[5],b=b[5],out=P5);
    //Xor(a=a[6],b=b[6],out=P6);
    //Xor(a=a[7],b=b[7],out=P7);
//Carry Generate:
    //And(a=a[4],b=b[4],out=G4);
    //And(a=a[5],b=b[5],out=G5);
    //And(a=a[6],b=b[6],out=G6);
    //And(a=a[7],b=b[7],out=G7);
//output carry:
    //And(a=P4,b=C4,out=D4);
    //Or(a=G4,b=D4,out=C5);
    //And(a=P5,b=C5,out=D5);
    //Or(a=G5,b=D5,out=C6);
    //And(a=P6,b=C6,out=D6);
    //Or(a=G6,b=D6,out=C7);
    //And(a=P7,b=C7,out=D7);
    //Or(a=G7,a=D7,out=C8);
//carry out
//sumation:
    //Xor(a=P4,b=C4,out=out[4]);
    //Xor(a=P5,b=C5,out=out[5]);
    //Xor(a=P6,b=C6,out=out[6]);
    //Xor(a=P7,b=C7,out=out[7]);
//=========End Second 4bit adder:===========

//=========Third 4bit adder:===========
//Carry Propagation: 
    //Xor(a=a[8],b=b[8],out=P8);
    //Xor(a=a[9],b=b[9],out=P9);
    //Xor(a=a[10],b=b[10],out=P10);
    //Xor(a=a[11],b=b[11],out=P11);
//Carry Generate:
    //And(a=a[8],b=b[8],out=G8);
    //And(a=a[9],b=b[9],out=G9);
    //And(a=a[10],b=b[10],out=G10);
    //And(a=a[11],b=b[11],out=G11);
//output carry:
    //And(a=P8,b=C8,out=D8);
    //Or(a=G8,b=D8,out=C9);
    //And(a=P9,b=C9,out=D9);
    //Or(a=G9,b=D9,out=C10);
    //And(a=P10,b=C10,out=D10);
    //Or(a=G10,b=D10,out=C11);
    //And(a=P11,b=C11,out=D11);
    //Or(a=G11,a=D11,out=C12);
//carry out
//sumation:
    //Xor(a=P8,b=C8,out=out[8]);
    //Xor(a=P9,b=C9,out=out[9]);
    //Xor(a=P10,b=C10,out=out[10]);
    //Xor(a=P11,b=C11,out=out[11]);
//=========End Third 4bit adder:===========

//=========Fourth 4bit adder:===========
//Carry Propagation: 
    //Xor(a=a[12],b=b[12],out=P12);
    //Xor(a=a[13],b=b[13],out=P13);
    //Xor(a=a[14],b=b[14],out=P14);
    //Xor(a=a[15],b=b[15],out=P15);
//Carry Generate:
    //And(a=a[12],b=b[12],out=G12);
    //And(a=a[13],b=b[13],out=G13);
    //And(a=a[14],b=b[14],out=G14);
    //And(a=a[15],b=b[15],out=G15);
//output carry:
    //And(a=P12,b=C12,out=D12);
    //Or(a=G12,b=D12,out=C13);
    //And(a=P13,b=C12,out=D13);
    //Or(a=G13,b=D13,out=C14);
    //And(a=P14,b=C14,out=D14);
    //Or(a=G14,b=D14,out=C15);
    //And(a=P15,b=C15,out=D15);
    //Or(a=G15,a=D15,out=C16);
//carry out
//sumation:
    //Xor(a=P12,b=C12,out=out[12]);
    //Xor(a=P13,b=C13,out=out[13]);
    //Xor(a=P14,b=C14,out=out[14]);
    //Xor(a=P15,b=C15,out=out[15]);
//=========End Fourth 4bit adder:===========
	HalfAdder(a=a[0],b=b[0],sum=out[0],carry=c);
	FullAdder(a=a[1],b=b[1],c=c,sum=out[1],carry=d);
	FullAdder(a=a[2],b=b[2],c=d,sum=out[2],carry=e);
	FullAdder(a=a[3],b=b[3],c=e,sum=out[3],carry=f);
	FullAdder(a=a[4],b=b[4],c=f,sum=out[4],carry=g);
	FullAdder(a=a[5],b=b[5],c=g,sum=out[5],carry=h);
	FullAdder(a=a[6],b=b[6],c=h,sum=out[6],carry=i);
	FullAdder(a=a[7],b=b[7],c=i,sum=out[7],carry=j);
	FullAdder(a=a[8],b=b[8],c=j,sum=out[8],carry=k);
	FullAdder(a=a[9],b=b[9],c=k,sum=out[9],carry=l);
	FullAdder(a=a[10],b=b[10],c=l,sum=out[10],carry=m);
	FullAdder(a=a[11],b=b[11],c=m,sum=out[11],carry=n);
	FullAdder(a=a[12],b=b[12],c=n,sum=out[12],carry=o);
	FullAdder(a=a[13],b=b[13],c=o,sum=out[13],carry=p);
	FullAdder(a=a[14],b=b[14],c=p,sum=out[14],carry=q);
	FullAdder(a=a[15],b=b[15],c=q,sum=out[15],carry=drop);
}